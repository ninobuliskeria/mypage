d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_result$n/.19
#n_total <- 2500  # Total sample size
#n_per_group <- 500  # Sample size per group (assuming equal groups)
alpha <- 0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
bA1c
## HbA1c
# Define parameters
#n_total <- 2500  # Total sample size
#n_per_group <- 500  # Sample size per group (assuming equal groups)
alpha <- 1-(1-0.05)^3 #0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha
ine parameters
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .6
minchange <- .30
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants
mdes_resultn$n/.2
alpha <-  0.05/3    # family‑wise α, Bonferroni for 4 tests
power <- 0.80    # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
ceiling(mdes_resultn$n)
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.2
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
# attrition
(500-total)/500
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .3
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .32
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .33
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .8
minchange <- .3
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
#n_per_group <- 500   # Sample size per group (assuming equal groups)
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .8
minchange <- .3
d <- 0.50 #minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .8
minchange <- .3
d <- 0.43 #minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .8
minchange <- .3
d <- 0.43 #minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
#n_per_group <- 500   # Sample size per group (assuming equal groups)
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
alpha <-  0.05/3      # family‑wise α, Bonferroni for 4 tests
power <- 0.80         # Desired power
stdev <- .7
minchange <- .35
d <- minchange/stdev
# Calculate the minimum detectable effect size (Cohen's d)
mdes_resultn <- pwr.t.test(d = d,
power = power,
sig.level = alpha,
type = "two.sample",
alternative = "two.sided")
# Display the minimum detectable effect size
mdes_resultn$n #black
#number of participants for an arm
mdes_resultn$n/.19
?pwr.t.test
?pwr.t2n.test
pwr.t2n.test(n1 = 1000,
n2= 500,
sig.level = alpha,
power = power,
alternative = c("two.sided"))
d
res <- pwr.t2n.test(n1 = 1000,
n2= 500,
sig.level = alpha,
power = power,
alternative = c("two.sided")
)
res$d
500*.19
1000*.19
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
sig.level = alpha,
power = power,
alternative = c("two.sided")
)
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
sig.level = alpha,
power = .9,
alternative = c("two.sided")
)
res$d
res1 <- pwr.t.test(n = 500*.19,
power = .9,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
res1$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .9,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res1 <- pwr.t.test(n = 500*.19,
power = .8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
res1$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res1 <- pwr.t.test(n = 500*.19,
power = .8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
res1$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .9,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05,
alternative = c("two.sided")
)
res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .8,
sig.level = .05/3,
alternative = c("two.sided")
)
res$d
res$d * 0.7
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .9,
sig.level = .05,
alternative = c("two.sided")
)
res$d
0.7*res$d
.3/.7
(1.35-0.23)/(2*1.96)
alpha <- 0.05   # Significance level
power <- 0.9    # Desired power
stdev <- .3
minchange <- .15
conhen <- minchange/stdev  #Effect size (Cohen's d) - difference between the means divided by the pooled standard deviation
# Calculate the minimum detectable effect size (Cohen's d)
mdes_result <- pwr.t.test(d = conhen, power = power, sig.level = alpha, type = "two.sample", alternative = "two.sided")
# Display the minimum detectable effect size
mdes_result$n
mdes_result$n/.19
n
mdes_result$n/.19
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .9,
sig.level = .05,
alternative = c("two.sided")
)
res$d
.3 *res$d
res <- pwr.t2n.test(n1 = 1000*.19,
n2= 500*.19,
power = .9,
sig.level = .05,
alternative = c("two.sided")
)
res$d
.3*res$d
7818268/10945575
7818268*1.4
6775/2500
6775/3
7818268/6775
7818268/6775*7500
7818268/6775*7500*1.4
7818268/6775*7500*1.4-10945575
1292626/2000
1292626/2000*2500
1292626/2000*2500*1.4
5786883 + 8980929
total = 1639766 + 647836 + 17591700 + 5327729
3859128/total
20 + 50 + .5 + 165.5+7
greg = .2 + 3.75 + 1.2 + 1.2 + 3+ 5.786883 + 8.980929 + .152627 + .99995  + .97534
gredg
greg
.2 + 3.75 + 1.2 + 1.2 + 3
.2 + 3.75 + 1.2 + 1.2 + 3 +11
11,916,223
.2 + 3.75 + 1.2 + 1.2 + 3 +11916223
.2 + 3.75 + 1.2 + 1.2 + 3 +11.916223
.2 + 3.75 + 1.2 + 1.2 + 3 +11.916223
blogdown::build_site()
install.packages("blogdown")
blogdown::build_site()
blogdown::build_site()
setwd("/Users/ninobuliskeria/Documents/GitHub/mypage")
blogdown::build_site()
setwd("/Users/ninobuliskeria/Documents/Github/mypage")
blogdown::build_site()
blogdown::install_hugo()
blogdown::build_site()
blogdown::serve_site()
setwd("/Users/ninobuliskeria/Documents/Github/mypage")
blogdown::serve_site()
blogdown::build_site()
source("~/Documents/Github/mypage/nini.R", echo=TRUE)
blogdown::build_site()
blogdown::build_site()
hugo version
blogdown::build_site()
blogdown::build_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
